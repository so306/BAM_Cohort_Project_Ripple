// SPDX-License-Identifier: GPL-3.0
pragma solidity >0.5.99 <0.8.0;

contract BookChain{
    
    mapping (uint => address) books;
    mapping (address => uint) reputation;
    mapping (address => uint) currency;
    
    event bookRegistered(address lender, uint ISBN);
    event onlineTransactionCompleted(address lender, address borrower, uint ISBN);
    
    
    function registerBook(address lender, uint ISBN) public {
        books[ISBN] = lender;
        emit bookRegistered(lender, ISBN);
    }
    
    
    function setBalance(address lender, address borrower) public{
        currency[lender] = 100;
        currency[borrower] = 100;
    }
    
    
    function getBalance(address user) public view returns(uint){
        return currency[user];
    }
    
    
    function modifyBalances(address lender, address borrower, uint amount) private{
        currency[borrower] += amount;
        currency[lender] += amount;
    }
    
    
    function modifyReputation(address lender) private{  
        reputation[lender] += 10;
    }
    
    
    function transaction(uint ISBN) public{
        address lender = books[ISBN];
        delete books[ISBN]; 
        modifyBalances(lender, msg.sender, 10);
        modifyReputation(lender);
        
        emit onlineTransactionCompleted(lender, msg.sender, ISPN);
    }
}

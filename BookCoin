// SPDX-License-Identifier: GPL-3.0
pragma solidity >0.5.99 <0.8.0;

contract BookCoin{
    
    mapping (uint => uint[]) books;     //ISPN to list of people who own each book
    mapping (address => uint) reputation;
    mapping (address => uint) currency;
    event bookRegistered(address lender, uint borrower, uint ISPN);
    
    function registerBook(address lender, string bookName, string className, uint value) {
        
        emit bookRegistered();
    }
    
    function setBalance(address lender, address borrower){
        currency[lender] = 100;
        currency[borrower] = 100;
    }
    
    function modifyBalances(address lender, address borrower, int amount) {
        currency[borrower] -= amount;
        currency[lender] += amount;
    
        emit Change(msg.sender, data[msg.sender]+amount, data[msg.sender]);
    }
    
    function transaction(address borrower, uint ISPN){
        
    }
    
   //hardcode certain num of textbooks in high demand 5-10
   //keep global record how many of each are available, who they're from
   //mapping or some way to id each textbooks
   //list of all the addresses that have offered to lend list
   //erc20 can represent smoeone's reputation
   //rep goes up if transaction successful, book on time, quality
   //event trustowrthy
   //probability
   //calc rep. start by how much $ you put in. every $10 1 rep
   //input collateral event
}
